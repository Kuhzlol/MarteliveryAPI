// <auto-generated />
using System;
using MarteliveryAPI_DotNet8_v01.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarteliveryAPI_DotNet8_v01.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231203175406_AddAllTablesAndRelationship")]
    partial class AddAllTablesAndRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Carrier", b =>
                {
                    b.Property<int>("CarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("carrier_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarrierId"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("hashed_password");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_email_confirmed");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("login_provider");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("token");

                    b.HasKey("CarrierId");

                    b.ToTable("carriers");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.CarrierRating", b =>
                {
                    b.Property<int>("DeliveryId")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<int>("CarrierRate")
                        .HasColumnType("integer")
                        .HasColumnName("carrier_rate");

                    b.HasKey("DeliveryId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("carrier_ratings");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomerId"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("hashed_password");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_email_confirmed");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("login_provider");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("token");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("delivery_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeliveryId"));

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("delivery_status");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("delivery_time");

                    b.Property<DateTime>("PickupTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("pickup_time");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.HasKey("DeliveryId");

                    b.HasIndex("QuoteId");

                    b.ToTable("deliveries");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Parcel", b =>
                {
                    b.Property<int>("ParcelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("parcel_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ParcelId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<string>("DeliveryLocation")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("delivery_location");

                    b.Property<float>("Height")
                        .HasColumnType("real")
                        .HasColumnName("height");

                    b.Property<float>("Length")
                        .HasColumnType("real")
                        .HasColumnName("length");

                    b.Property<string>("PickupLocation")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("pickup_location");

                    b.Property<float>("Weight")
                        .HasColumnType("real")
                        .HasColumnName("weight");

                    b.Property<float>("Width")
                        .HasColumnType("real")
                        .HasColumnName("width");

                    b.HasKey("ParcelId");

                    b.HasIndex("CustomerId");

                    b.ToTable("parcels");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("payment_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentId"));

                    b.Property<float>("PaymentAmount")
                        .HasColumnType("real")
                        .HasColumnName("payment_amount");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("payment_method");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("payment_status");

                    b.Property<DateTime>("PaymentTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("payment_time");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    b.HasKey("PaymentId");

                    b.HasIndex("QuoteId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("quote_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuoteId"));

                    b.Property<int>("CarrierId")
                        .HasColumnType("integer")
                        .HasColumnName("carrier_id");

                    b.Property<float>("DeliveryDistance")
                        .HasColumnType("real")
                        .HasColumnName("delivery_distance");

                    b.Property<int>("ParcelId")
                        .HasColumnType("integer")
                        .HasColumnName("parcel_id");

                    b.Property<float>("PricePerKm")
                        .HasColumnType("real")
                        .HasColumnName("price_per_km");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("status");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real")
                        .HasColumnName("total_price");

                    b.HasKey("QuoteId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ParcelId");

                    b.ToTable("quotes");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.CarrierRating", b =>
                {
                    b.HasOne("MarteliveryAPI_DotNet8_v01.Models.Customer", "Customer")
                        .WithMany("CarrierRatings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarteliveryAPI_DotNet8_v01.Models.Delivery", "Delivery")
                        .WithMany("CarrierRatings")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Delivery", b =>
                {
                    b.HasOne("MarteliveryAPI_DotNet8_v01.Models.Quote", "Quote")
                        .WithMany("Deliveries")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Parcel", b =>
                {
                    b.HasOne("MarteliveryAPI_DotNet8_v01.Models.Customer", "Customer")
                        .WithMany("Parcels")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Payment", b =>
                {
                    b.HasOne("MarteliveryAPI_DotNet8_v01.Models.Quote", "Quote")
                        .WithMany("Payments")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Quote", b =>
                {
                    b.HasOne("MarteliveryAPI_DotNet8_v01.Models.Carrier", "Carrier")
                        .WithMany("Quotes")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarteliveryAPI_DotNet8_v01.Models.Parcel", "Parcel")
                        .WithMany("Quotes")
                        .HasForeignKey("ParcelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");

                    b.Navigation("Parcel");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Carrier", b =>
                {
                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Customer", b =>
                {
                    b.Navigation("CarrierRatings");

                    b.Navigation("Parcels");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Delivery", b =>
                {
                    b.Navigation("CarrierRatings");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Parcel", b =>
                {
                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("MarteliveryAPI_DotNet8_v01.Models.Quote", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
